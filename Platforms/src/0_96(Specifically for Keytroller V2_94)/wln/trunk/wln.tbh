'***********************************************************************************************************
'			WI-FI LIBRARY
'			(Works with GA1000)
'***********************************************************************************************************

#if WLN_AVAILABLE '##################################################

#ifndef WLN_DEBUG_PRINT
	#define WLN_DEBUG_PRINT 0
#endif

#ifndef WLN_RESET_MODE '0- separate RST line, 1- CS/CLK used to control it
	#define WLN_RESET_MODE 0
#endif

#ifndef WLN_RST
	#define WLN_RST PL_IO_NULL
#endif

#ifndef WLN_CS
	#define WLN_CS PL_IO_NULL
#endif

#ifndef WLN_DI
	#define WLN_DI PL_IO_NULL
#endif

#ifndef WLN_DO
	#define WLN_DO PL_IO_NULL
#endif

#ifndef WLN_CLK
	#define WLN_CLK PL_IO_NULL
#endif

#ifndef WLN_KEEP_ALIVE
	#define WLN_KEEP_ALIVE 0
#endif

#ifndef WLN_KEEP_ALIVE_TOUT
	#define WLN_KEEP_ALIVE_TOUT 120
#endif

#ifndef WLN_WPA
	#define WLN_WPA 0
#endif

'------------------------------------------------------------------------------
#if WLN_WPA
	enum pl_wln_security_modes
		WLN_SECURITY_MODE_DISABLED,
		WLN_SECURITY_MODE_WEP64,
		WLN_SECURITY_MODE_WEP128,
		WLN_SECURITY_MODE_WPA1,
		WLN_SECURITY_MODE_WPA2
	end enum
#else
	enum pl_wln_security_modes
		WLN_SECURITY_MODE_DISABLED,
		WLN_SECURITY_MODE_WEP64,
		WLN_SECURITY_MODE_WEP128
	end enum
#endif

enum en_wln_status_codes
	WLN_STATUS_OK,
	WLN_STATUS_OUT_OF_SOCKETS,
	WLN_STATUS_INSUFFICIENT_BUFFER_SPACE,
	WLN_STATUS_MISSING_FIRMWARE_FILE,
	WLN_STATUS_BOOT_FAILURE,
	WLN_STATUS_INVALID_WEP_MODE,
	WLN_STATUS_INVALID_WEP_KEY,
	WLN_STATUS_SCANNING_FAILURE,
	WLN_STATUS_ASSOCIATION_FAILURE,
	WLN_STATUS_DISASSOCIATION,
	WLN_STATUS_UNEXPECTED_ERROR
end enum

'------------------------------------------------------------------------------
declare function wln_start(byref ap_name as string, security_mode as pl_wln_security_modes, byref key as string) as en_wln_status_codes
declare sub wln_stop()
declare function wln_check_association() as pl_wln_association_states
declare sub wln_proc_timer()
declare sub wln_proc_data()
declare sub wln_proc_event(wln_event as pl_wln_events)
declare sub wln_proc_task_complete(completed_task as pl_wln_tasks)
declare function wln_wpa_mkey_get(byref passphrase as string, byref ssid as string) as string

declare sub callback_wln_failure(wln_state as en_wln_status_codes)
declare sub callback_wln_ok()
declare sub callback_wln_pre_buffrq(required_buff_pages as byte)
declare sub callback_wln_mkey_progress_update(progress as byte)

#endif '#############################################################