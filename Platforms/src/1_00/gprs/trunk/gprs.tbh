'***********************************************************************************************************
'		GPRS LIBRARY
'		(Works with TELIT GC864 GPRS module)
'***********************************************************************************************************

'1- debug output in console.
'0- no debug output.
#ifndef GPRS_DEBUG_PRINT
	#define GPRS_DEBUG_PRINT 0
#endif

'1- ping GPRS_PING_IP in the end of PPP link establishement (as a proof of success).
'0- suppress pinging.
#ifndef GPRS_SEND_PING
	#define GPRS_SEND_PING 0
#endif

'This is the IP address that will be pinged when GPRS_SEND_PING is set.
'Only relevant when GPRS_SEND_PING is 1.
#ifndef GPRS_PING_IP
	#define GPRS_PING_IP "0.0.0.0"
#endif

'Serial port to which the GPRS GPRS module is connected. Default=3.
'Like with ser.num, serial ports are numbered 0-3 (this corresponds to physical ports 1-4).
'Keep at default value for NB1010 and DS101x devices.
#ifndef GPRS_SER_PORT
	#define GPRS_SER_PORT 3
#endif

'0- the GPRS module is external, GPRS_SWITCH and GPRS_RESET GPIO lines are not in use, there is no startup delay-
'the GPRS module is supposed to be up and running by the time gprs_init_start() is called
'1- the GPRS module is internal (like on the NB1010 and DS101x), GPRS_SWITCH and GPRS_RESET
'lines are used to control the module; there is a proper reset and startup delay when gprs_init_start()
'is called
#ifndef GPRS_MODULE_EXTERNAL
	#define GPRS_MODULE_EXTERNAL 0
#endif

'GPIO line on the NB1010 (and DS101x devices) that, when set LOW, diverts traffic
'on serial port 3 (physical port 4) to the GPRS module. When the line is HIGH or disabled,
'the NB1010 communicates with the serial port on the IB board
'Only relevant when GPRS_MODULE_EXTERNAL is 0
#ifndef GPRS_SWITCH
	#define GPRS_SWITCH PL_IO_NUM_54
#endif

'GPIO line of the NB1010 (and DS101x devices) that, when set HIGH, applies hardware reset to
'the GPRS module. The line is set to LOW to release the GPRS module from reset
'Only relevant when GPRS_MODULE_EXTERNAL is 0
#ifndef GPRS_RESET
	#define GPRS_RESET PL_IO_NUM_55
#endif

'--------------------------------------------------------------------
enum en_gprs_status_codes
	GPRS_STATUS_OK,
	GPRS_STATUS_INSUFFICIENT_BUFFER_SPACE
end enum

'--------------------------------------------------------------------
declare function gprs_start(byref at_dt_command as string) as en_gprs_status_codes
declare sub gprs_stop()
declare sub gprs_proc_data()
declare sub gprs_proc_timer()
declare sub callback_gprs_pre_buffrq(required_buff_pages as byte)
declare sub callback_gprs_ok(byref ppp_ip as string)
declare sub callback_gprs_failure()


